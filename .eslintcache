[{"C:\\Users\\brady\\my_portfolio\\src\\index.js":"1","C:\\Users\\brady\\my_portfolio\\src\\reportWebVitals.js":"2","C:\\Users\\brady\\my_portfolio\\src\\App.js":"3","C:\\Users\\brady\\my_portfolio\\src\\Navbar.js":"4","C:\\Users\\brady\\my_portfolio\\src\\About Page\\About.js":"5","C:\\Users\\brady\\my_portfolio\\src\\Projects\\Game.js":"6","C:\\Users\\brady\\my_portfolio\\src\\About Page\\About-Timeline.js":"7","C:\\Users\\brady\\my_portfolio\\src\\Projects\\Projects.js":"8"},{"size":505,"mtime":1610086157829,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1086,"mtime":1610347637632,"results":"12","hashOfConfig":"10"},{"size":1452,"mtime":1610092728848,"results":"13","hashOfConfig":"10"},{"size":3070,"mtime":1610091301451,"results":"14","hashOfConfig":"10"},{"size":1926,"mtime":1610347560272,"results":"15","hashOfConfig":"10"},{"size":1169,"mtime":1610091151521,"results":"16","hashOfConfig":"10"},{"size":2353,"mtime":1610328690494,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1anh4vl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\brady\\my_portfolio\\src\\index.js",[],["39","40"],"C:\\Users\\brady\\my_portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\brady\\my_portfolio\\src\\App.js",["41","42","43","44","45","46"],"C:\\Users\\brady\\my_portfolio\\src\\Navbar.js",["47","48","49","50","51","52","53"],"import React, {useEffect, useState} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    const [snap,setSnap] = useState(window.innerWidth)\r\n    const newsnap = () => {\r\n        setSnap(window.innerWidth)\r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener('resize',newsnap)\r\n        return () => {\r\n            window.removeEventListener('resize',newsnap)\r\n        }\r\n    },[snap])\r\n  const style1 = {\r\n    marginRight: 'auto',\r\n    width:'20px'\r\n  }\r\n  const colorStyle = {\r\n    color: \"#0b5ed7\"\r\n  }\r\n  return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container-fluid justify-content-center position-relative\">\r\n          <img src=\"icon.png\" className=\"d-inline float-start\" style={style1}/>\r\n          {snap > 1186 && <a href=\"\" className=\"display-6 position-absolute\" style={colorStyle}>B</a>}\r\n            <Link to=\"/\"><a className=\"navbar-brand pe-5\">\r\n              Home\r\n              <img src=\"icon.png\" style={{width:'20px'}} className=\"d-inline-block align-self-center\"/>\r\n            </a></Link>\r\n            <Link to=\"/about\"><a className=\"navbar-brand pe-5\">About</a></Link>\r\n            <Link to=\"/projects\"><a className=\"navbar-brand pe-5\">Projects</a></Link>\r\n            <Link to=\"/\"><a className=\"navbar-brand pe-5\">Contact Me</a></Link>\r\n        </div>\r\n      </nav>\r\n  )\r\n\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\brady\\my_portfolio\\src\\About Page\\About.js",["54","55","56","57"],"import React, {useEffect, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link as Scroller  } from \"react-scroll\";\r\nimport '../override.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport Timeline from \"./About-Timeline\";\r\nconst Languages = () => {\r\n    return (\r\n        <div>\r\n            <div className='jumbotron'>\r\n                <div className='container'>\r\n                    <h1 className='display-1'>Languages that I know</h1>\r\n                    <p className='lead'>These are the languages I know</p>\r\n                    <Link to='/'><a>\r\n                        <button className=\"btn d-flex justify-content-end\">Go Back</button>\r\n                    </a></Link>\r\n                </div>\r\n            </div>\r\n             <CodeCard/>\r\n             <Timeline/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CodeCard = () => {\r\n    const [show,setShow] = useState(true)\r\n    useEffect(()=> {\r\n        setShow(JSON.parse(localStorage.getItem(\"keyvalue\")))\r\n    },[])\r\n    useEffect(()=> {\r\n        localStorage.setItem(\"keyvalue\",show)\r\n    },[show])\r\n    if (show) {\r\n            return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"card col-md-2\">\r\n                    <img src=\"icon.png\" className=\"card-img-top\"/>\r\n                        <div className=\"card-header\">\r\n                            <h1 className=\"card-title\" onClick={() => setShow(false)}>Click me to show the three</h1>\r\n                            <p className=\"card-text\">Filler Text</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n    )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n            <CardList/>\r\n            <button onClick={()=> setShow(true)}>setshow true</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst CardList = () => {\r\n    const NumberOfitems = ['Python','HTML/CSS','React.js']\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='d-flex py-2 justify-content-center'>\r\n                    {NumberOfitems.map((per) => {\r\n                        return (\r\n                            <Card per={per}/>\r\n                            )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Card = ({per}) => {\r\n    return (\r\n\r\n                    <div className=\"col-md-3 px-5\">\r\n                <img src=\"icon.png\" className=\"card-img-top\"/>\r\n                    <div className=\"card-header\">\r\n                          <Scroller\r\n                              to={per}\r\n                              spy={true}\r\n                              smooth={true}\r\n                              offset={250}\r\n                              duration={100}\r\n                          >\r\n                        <h1 className=\"card-title\">Coding</h1>\r\n                          </Scroller>\r\n                        <p className=\"card-text\">Im a god at coding</p>\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Languages\r\n","C:\\Users\\brady\\my_portfolio\\src\\Projects\\Game.js",["58","59"],"C:\\Users\\brady\\my_portfolio\\src\\About Page\\About-Timeline.js",["60"],"import React from \"react\";\r\nimport { animateScroll as Scroll  } from \"react-scroll\";\r\n\r\n\r\nconst Timeline = () => {\r\n    const languages = ['Python','HTML/CSS','React.js']\r\n    return ( <>\r\n        <h1 className='display-1 text-center py-3'> Timeline </h1>\r\n        <div style={{height:'30vw'}}>\r\n        </div>\r\n        {languages.map((language) => {\r\n            return <EachNav language={language} id={language}/>\r\n        })}\r\n        </>)\r\n}\r\n\r\nconst EachNav = (props) => {\r\n    const backToTop = () => {\r\n        Scroll.scrollToTop()\r\n    }\r\n    const {language,id} = props\r\n    return (\r\n        <div className='d-flex' style={{padding:\"30vw\"}} id={id}>\r\n            <div className=\"col-md-4 d-flex justify-content-center\">\r\n            <h1 className='card-title'>{language}</h1>\r\n            <img src=\"\" className='rounded-circle'/>\r\n            </div>\r\n            <p className=\"lead\" style={{marginLeft:'auto'}}>What happens if I write more words to the More default text that will flex wrap I think</p>\r\n            <button onClick={backToTop} className=\"btn btn-outline-primary\">Back to the top</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timeline\r\n","C:\\Users\\brady\\my_portfolio\\src\\Projects\\Projects.js",["61"],"import React, {useEffect, useState} from \"react\";\nimport {DragDropContext , Draggable, Droppable} from \"react-beautiful-dnd\";\n\nconst Project = () => {\n    const words = ['y','a','r','d']\n    const [x,setX] = useState(Math.round(Math.random()*10))\n    const clickhandle = () => {\n        setX(Math.round(Math.random()*10))\n    }\n    const dragHandler = (result) => {\n        console.log(result)\n    }\n    return (\n        <DragDropContext onDragEnd={dragHandler}>\n        <h1>Hello World + {x}</h1>\n            <button onClick={clickhandle}>Click Me</button>\n            <div>\n                <div className=\"row text-center my-5 justify-content-center\">\n                    {words.map((letter)=> {\n                        return (\n                            <Droppable droppableId={letter}>\n                                {(provided) => {\n                                    return (\n                                        <h1 ref={provided.innerRef} {...provided.droppableProps} className=\"display-1 col-md-1\">_</h1>\n                                    )\n                                }}\n                            </Droppable>\n                        )\n                    })}\n                </div>\n                <Droppable droppableId='a' direction='horizontal'>\n                    {(provided) => {\n                        return (\n                        <div ref={provided.innerRef} {...provided.droppableProps} className=\"d-flex justify-content-center align-items-center my-5\" style={{height:'15vw'}}>\n                            {provided.placeholder}\n\n                            {words.map((letter,index) => {\n                    return (\n                           <FillBlank letter={letter} index={index}/>\n                    )\n                })}\n                </div>\n                        )}}\n\n                </Droppable>\n            </div>\n        </DragDropContext>\n    )\n}\n\nconst FillBlank = (props) => {\n    const {letter,index} = props\n    return (\n        <Draggable draggableId={letter} index={index}>\n            {(provided) => {\n\n                return <> <span ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className=\"badge bg-dark mx-4\">{letter}</span>\n                {provided.placeholder}\n                </>\n            }}\n        </Draggable>\n)\n}\n\nexport default Project\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":2,"column":16,"nodeType":"68","messageId":"69","endLine":2,"endColumn":25},{"ruleId":"66","severity":1,"message":"71","line":2,"column":27,"nodeType":"68","messageId":"69","endLine":2,"endColumn":35},{"ruleId":"66","severity":1,"message":"72","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":16},{"ruleId":"66","severity":1,"message":"73","line":8,"column":43,"nodeType":"68","messageId":"69","endLine":8,"endColumn":49},{"ruleId":"74","severity":1,"message":"75","line":33,"column":5,"nodeType":"76","endLine":33,"endColumn":8},{"ruleId":"77","severity":1,"message":"78","line":26,"column":11,"nodeType":"76","endLine":26,"endColumn":80},{"ruleId":"74","severity":1,"message":"79","line":27,"column":27,"nodeType":"76","endLine":27,"endColumn":97},{"ruleId":"74","severity":1,"message":"75","line":28,"column":26,"nodeType":"76","endLine":28,"endColumn":59},{"ruleId":"77","severity":1,"message":"78","line":30,"column":15,"nodeType":"76","endLine":30,"endColumn":104},{"ruleId":"74","severity":1,"message":"75","line":32,"column":31,"nodeType":"76","endLine":32,"endColumn":64},{"ruleId":"74","severity":1,"message":"75","line":33,"column":34,"nodeType":"76","endLine":33,"endColumn":67},{"ruleId":"74","severity":1,"message":"75","line":34,"column":26,"nodeType":"76","endLine":34,"endColumn":59},{"ruleId":"66","severity":1,"message":"72","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":14,"column":34,"nodeType":"76","endLine":14,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":37,"column":21,"nodeType":"76","endLine":37,"endColumn":67},{"ruleId":"77","severity":1,"message":"78","line":78,"column":17,"nodeType":"76","endLine":78,"endColumn":63},{"ruleId":"66","severity":1,"message":"70","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"80","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":26,"column":13,"nodeType":"76","endLine":26,"endColumn":53},{"ruleId":"66","severity":1,"message":"70","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'resetServerContext' is defined but never used.","no-global-assign","no-unsafe-negation"]